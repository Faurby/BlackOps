@page "/"
@using MiniTwit.Shared
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStore
@using MiniTwit.Client.Helper;


@* Base uri for the application Used as public timeline (showing all messages from all users) *@

<PageTitle>MiniTwit</PageTitle>

<div class=page>
  <div class=top-sticker>
    <h4>Public Timeline</h4>
  </div>

  @if (signedIn)
  {
    <NewPostBox gravLink=@gravLink></NewPostBox>
  }
  @if (messages != null)
  {
    <div style="height:90vh; overflow-y:scroll">
      <Virtualize Items="@messages" Context="message">
        <MessageBox message="message"></MessageBox>
      </Virtualize>
    </div>
  }

</div>

@code {
  private List<Message>? messages;


  private bool signedIn;
  private User? localUser;
  private string gravLink;

  protected override async Task OnInitializedAsync()
  {
    // Get all messages through the API
    messages = await Http.GetFromJsonAsync<List<Message>>("api/Messages");

    localUser = await localStore.GetItemAsync<User>("user");
    if (localUser != null)
    {
      signedIn = true;
      gravLink = await Gravatar.GenerateGravatarLink(Http, localUser.Id, 64);
    }
  }
}